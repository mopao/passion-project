@model IEnumerable<passion_project.Models.Item>
@Styles.Render("~/Content/Items/List.css")

@{
    ViewBag.Title = "List of items";
    int itemPerRow = ViewBag.itemPerRow;
    int nberOfRows = ViewBag.nberOfRows;
    int col = 12 / itemPerRow;
}

<h2>List of Items</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="container">
    @for (var i = 0; i < nberOfRows; i++)
    {
        <div class="row">

            @for (var j = 0; j < itemPerRow; j++)
            {
                <div class="col-sm-@col">

                    @if ((i * itemPerRow) + j < Model.Count())
                    {
                        var item = Model.ElementAt((i * itemPerRow) + j);
                        <div class="div-item-img">
                            <a href="Details/@item.itemId">
                                <img src="~/Content/Images/@item.image" alt="item image" class="img-responsive" />
                            </a>
                        </div>
                        <div class="div-item-brand"><strong>@Html.DisplayFor(modelItem => item.brand.name)</strong></div>
                        if (!string.IsNullOrEmpty(item.name))
                        {
                            <div class="div-item-name">@Html.DisplayFor(modelItem => item.name)</div>
                        }
                        <div class="div-item-price"><strong>Cad @Html.DisplayFor(modelItem => item.price)</strong> </div>
                    }

                </div>


            }

        </div>

    }
    <div class="page-paginate">
        @{ 
            int PageNum = Convert.ToInt32(ViewData["PageNum"]);
            int MaxPageNum = Convert.ToInt32(ViewData["MaxPageNum"]);
        }
        <ul>

            @if (PageNum > 1)
            {
                int PrevPage = PageNum - 1;
                <li>

                    @Html.ActionLink("Prev", "List", new { pageNum = PrevPage, brandId = ViewBag.brandId, gender = ViewBag.gender })
                </li>
                <li>|</li>

            }
            <li>@ViewData["PageNum"] of @ViewData["MaxPageNum"]</li>

            @if (PageNum < MaxPageNum)
            {
                <li>|</li>
                int NextPage = PageNum + 1;
                <li>
                    @Html.ActionLink("Next", "List", new { pageNum = NextPage, brandId = ViewBag.brandId, gender = ViewBag.gender })
                </li>
            }

        </ul>
    </div>
</div>
